@model SalesViewModel
@inject ISelectProductType services
@{
    ViewData["Title"] = "Index";
}



@section title {
    <div class="row">
        <div class="col-7"><h3>Cashier's Console</h3></div>
        <div class="col-2"><label for="cashier">Cashier Name:</label></div>
        <div class="col-3">
            @* Display Cashier's name here *@
            @User?.Identity?.Name
        </div>
    </div>
}


  
    
    <br />
<div class="row">
    <div class="col-4">
        <div class="text-danger" asp-validation-summary="All"></div>
        @* Category selection *@
        <label asp-for="SelectedCategoryId" class="control-label"></label>

        <select id="categoryDropdown" asp-for="SelectedCategoryId" class="form-control" asp-items="@await services.GetProductsCategory()">
            <option>- Please Select -</option>
    
        </select>
        <br />
        <div id="cont-category-product">
            @* Product List *@
        </div>
        <br />
        <div id="productDetailPartial">
            @* Product Details *@
        </div>

        @* Sales form *@
        <form method="post" asp-controller="sales" asp-action="sell" id="formSale">
            <input asp-for="SelectedProductId" type="hidden" />
            <div class="form-group">
                <label asp-for="QuantityToSell"></label>
                <input asp-for="QuantityToSell" class="form-control" type="number" min="1" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Submit" />
            </div>
        </form>
        
</div>
        
    <div class="col-7">
        @* List of transactions *@

        @await Component.InvokeAsync("Transactions", "Cashier1")
    </div>
 </div>
      